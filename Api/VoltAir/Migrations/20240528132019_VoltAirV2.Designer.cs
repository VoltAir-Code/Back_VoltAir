// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VoltAir.Contexts;

#nullable disable

namespace VoltAir.Migrations
{
    [DbContext(typeof(VoltaireContext))]
    [Migration("20240528132019_VoltAirV2")]
    partial class VoltAirV2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VoltAir.Domains.Carro", b =>
                {
                    b.Property<Guid>("IdCarro")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idCarro");

                    b.Property<DateTime?>("DurBateria")
                        .HasColumnType("datetime");

                    b.Property<Guid?>("IdMarca")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idMarca");

                    b.Property<Guid?>("IdRegistro")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idRegistro");

                    b.Property<string>("Modelo")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("modelo");

                    b.Property<string>("Placa")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("placa");

                    b.HasKey("IdCarro")
                        .HasName("PK__Carros__3D09E20E3C025E74");

                    b.HasIndex("IdMarca");

                    b.HasIndex("IdRegistro");

                    b.ToTable("Carros");
                });

            modelBuilder.Entity("VoltAir.Domains.Marca", b =>
                {
                    b.Property<Guid>("IdMarca")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idMarca");

                    b.Property<string>("NomeMarca")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nomeMarca");

                    b.HasKey("IdMarca")
                        .HasName("PK__Marca__7033181270C60E6A");

                    b.ToTable("Marca", (string)null);
                });

            modelBuilder.Entity("VoltAir.Domains.Registro", b =>
                {
                    b.Property<Guid>("IdRegistro")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idRegistro");

                    b.Property<DateTime?>("DuracaoRecarga")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("UltimaRecarga")
                        .HasColumnType("datetime");

                    b.HasKey("IdRegistro")
                        .HasName("PK__Registro__62FC8F58FCF1BD8A");

                    b.ToTable("Registros");
                });

            modelBuilder.Entity("VoltAir.Domains.Usuario", b =>
                {
                    b.Property<Guid>("IdUsuario")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idUsuario");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Foto")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("foto");

                    b.Property<Guid?>("IdCarro")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("idCarro");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nome");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("senha");

                    b.HasKey("IdUsuario")
                        .HasName("PK__Usuarios__645723A69BF397A7");

                    b.HasIndex("IdCarro");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("VoltAir.Domains.Carro", b =>
                {
                    b.HasOne("VoltAir.Domains.Marca", "IdMarcaNavigation")
                        .WithMany("Carros")
                        .HasForeignKey("IdMarca")
                        .HasConstraintName("FK_Carros_Marca");

                    b.HasOne("VoltAir.Domains.Registro", "IdRegistroNavigation")
                        .WithMany("Carros")
                        .HasForeignKey("IdRegistro")
                        .HasConstraintName("FK_Carros_Registros");

                    b.Navigation("IdMarcaNavigation");

                    b.Navigation("IdRegistroNavigation");
                });

            modelBuilder.Entity("VoltAir.Domains.Usuario", b =>
                {
                    b.HasOne("VoltAir.Domains.Carro", "IdCarroNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdCarro")
                        .HasConstraintName("FK_Usuarios_Carros");

                    b.Navigation("IdCarroNavigation");
                });

            modelBuilder.Entity("VoltAir.Domains.Carro", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("VoltAir.Domains.Marca", b =>
                {
                    b.Navigation("Carros");
                });

            modelBuilder.Entity("VoltAir.Domains.Registro", b =>
                {
                    b.Navigation("Carros");
                });
#pragma warning restore 612, 618
        }
    }
}
